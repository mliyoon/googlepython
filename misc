# area of rectangle calculation

def rectangle_area (base, height):
    area = (base*height)
    print("The area is " + str(area))
rectangle_area(5, 6)


# convert miles to km
# 1) Complete the function to return the result of the conversion
def convert_distance(miles):
    return miles * 1.6  # approximately 1.6 km in 1 mile

my_trip_miles = 55

# 2) Convert my_trip_miles to kilometers by calling the function above
my_trip_km = convert_distance(my_trip_miles)

# 3) Fill in the blank to print the result of the conversion
print("The distance in kilometers is " + str(my_trip_km))

# 4) Calculate the round-trip in kilometers by doubling the result,
#    and fill in the blank to print the result
print("The round-trip in kilometers is " + str(2 * my_trip_km))


#return the message
def lucky_number(name):
  number = len(name) * 9
  message = "Hello " + name + ". Your lucky number is " + str(number)
  
  return message
	    
print(lucky_number("Kay"))
print(lucky_number("Cameron"))


# The number_group function should return "Positive" if the number received is positive, "Negative" if it's negative, and "Zero" if it's 0.
def number_group(number):
  if number > 0:
    return "Positive"
  elif number < 0:
    return "Negative"
  else:
    number = 0
    return "Zero"

print(number_group(10)) #Should be Positive
print(number_group(0)) #Should be Zero
print(number_group(-5)) #Should be Negative

#The fractional_part function divides the numerator by the denominator, and returns just the fractional part (a number between 0 and 1). Complete the body of the function so that it returns the right number.
#Note: Since division by 0 produces an error, if the denominator is 0, the function should return 0 instead of attempting the division.

def fractional_part(numerator, denominator):
	if denominator !=0:
		division = float((numerator % denominator)) / denominator
		return division
	else:
		return denominator

print(fractional_part(5, 5)) # Should be 0
print(fractional_part(5, 4)) # Should be 0.25
print(fractional_part(5, 3)) # Should be 0.66...
print(fractional_part(5, 2)) # Should be 0.5
print(fractional_part(5, 0)) # Should be 0
print(fractional_part(0, 5)) # Should be 0


#last_name and the first_name parameters are supplied, the function should return
def format_name(first_name, last_name):
	if first_name == '' and last_name == '':
		string = ""
	elif last_name == "":
		string = "Name: " + first_name
	elif first_name == "":
		string = "Name: " + last_name
	else:
		string = "Name: " + last_name + ", " + first_name
	return string

print(format_name("Ernest", "Hemingway"))
# Should return the string "Name: Hemingway, Ernest"

print(format_name("", "Madonna"))
# Should return the string "Name: Madonna"

print(format_name("Voltaire", ""))
# Should return the string "Name: Voltaire"

print(format_name("", ""))
# Should return an empty string


#In this code, there's an initialization problem that's causing our function to behave incorrectly. 
def count_down(current):
  while (current > 0):
    print(current)
    current -= 1
  print("Zero!")

count_down(3)


def print_range(start, end):
	# Loop through the numbers from start to end
	n = start
	while n <= end:

		print(n)
		n = n+1
		

print_range(1, 5)  # Should print 1 2 3 4 5 (each number on its own line) 
